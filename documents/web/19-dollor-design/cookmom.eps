%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 60 500 509 671 
%%LanguageLevel: 1
%%Creator: CorelDRAW 11
%%Title: cookmom.eps
%%CreationDate: Thu Feb 25 11:22:36 2010
%%For: Zmaj doo
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 11 Version 11.633
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.1
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
statusdict /manualfeed true put
wCorel11Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 1024 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax 111.58866 500.30816 456.97238 523.57124 @E
[0.00028346 0.00000000 0.00000000 0.00028346 111.58865734 500.75091082] @tm
 0 O 0 @g
0.00 0.00 0.00 0.60 k
e

% FontChange:/_Georgia 106511.00000 z
%CHAR: 0 0 (w) @t
84303 42853 m
84303 37403 83522 32024 81960 26681 c
80398 21338 78268 16651 75570 12586 c
72552 8077 69143 4598 65327 2130 c
61510 -337 57356 -1562 52900 -1562 c
49634 -1562 46616 -657 43865 1136 c
41113 2947 39267 5432 38326 8574 C
37084 7367 35930 6249 34865 5201 c
33817 4154 32433 3089 30728 1970 c
29042 870 27480 18 26077 -568 c
24675 -1154 22882 -1456 20699 -1456 c
18071 -1456 15888 -1047 14166 -231 c
12462 586 11077 1651 10030 2965 c
9071 4207 8379 5627 7953 7207 c
7545 8787 7332 10438 7332 12178 c
7332 12835 7403 13669 7562 14663 c
7722 15675 7882 16545 8059 17273 c
12480 33693 l
12906 35255 13207 36675 13385 37971 c
13580 39249 13687 40314 13687 41131 c
13687 43084 13349 44380 12710 45019 c
12071 45658 10758 45977 8787 45977 c
8024 45977 7047 45835 5876 45551 c
4704 45285 3781 45054 3124 44877 C
3905 48214 L
6604 49421 8982 50344 11059 50966 c
13119 51587 14770 51906 16012 51906 c
18799 51906 20823 51250 22137 49954 c
23432 48658 24071 46812 24071 44415 c
24071 43794 24018 42942 23876 41859 c
23734 40794 23521 39711 23255 38646 c
18409 19456 l
18107 18160 17841 16846 17628 15497 c
17415 14148 17326 13136 17326 12480 c
17326 9888 17841 7917 18870 6586 c
19918 5237 21675 4580 24125 4580 c
26308 4580 28598 5184 30995 6373 c
33391 7562 35575 9302 37545 11592 C
46758 51072 L
55812 51693 L
56433 50912 L
49102 19243 l
48853 18196 48605 16935 48338 15426 c
48072 13917 47948 12959 47948 12586 c
47948 10687 48249 9178 48853 8059 c
49474 6959 50238 6142 51179 5610 c
52084 5095 53007 4775 53983 4651 c
54960 4527 55883 4473 56788 4473 c
59149 4473 61563 5219 64049 6710 c
66534 8201 68682 10136 70528 12533 c
72569 15196 74185 18160 75357 21409 c
76546 24640 77132 28137 77132 31882 c
77132 33959 76848 35557 76262 36693 c
75694 37811 75073 38806 74362 39622 c
73670 40492 73049 41415 72481 42356 c
71895 43314 71611 44664 71611 46386 c
71611 48374 72268 49883 73599 50912 c
74913 51960 76297 52474 77753 52474 c
79794 52474 81392 51658 82564 50007 c
83718 48356 84303 45977 84303 42853 c
@c
F
%CHAR: 104630 0 (w) @t
188933 42853 m
188933 37403 188152 32024 186590 26681 c
185028 21338 182898 16651 180200 12586 c
177182 8077 173773 4598 169957 2130 c
166140 -337 161986 -1562 157530 -1562 c
154264 -1562 151246 -657 148495 1136 c
145743 2947 143897 5432 142956 8574 C
141714 7367 140560 6249 139495 5201 c
138447 4154 137063 3089 135358 1970 c
133672 870 132110 18 130707 -568 c
129305 -1154 127512 -1456 125329 -1456 c
122701 -1456 120518 -1047 118796 -231 c
117092 586 115707 1651 114660 2965 c
113701 4207 113009 5627 112583 7207 c
112175 8787 111962 10438 111962 12178 c
111962 12835 112033 13669 112192 14663 c
112352 15675 112512 16545 112689 17273 c
117110 33693 l
117536 35255 117837 36675 118015 37971 c
118210 39249 118317 40314 118317 41131 c
118317 43084 117979 44380 117340 45019 c
116701 45658 115388 45977 113417 45977 c
112654 45977 111677 45835 110506 45551 c
109334 45285 108411 45054 107754 44877 C
108535 48214 L
111234 49421 113612 50344 115689 50966 c
117749 51587 119400 51906 120642 51906 c
123429 51906 125453 51250 126767 49954 c
128062 48658 128701 46812 128701 44415 c
128701 43794 128648 42942 128506 41859 c
128364 40794 128151 39711 127885 38646 c
123039 19456 l
122737 18160 122471 16846 122258 15497 c
122045 14148 121956 13136 121956 12480 c
121956 9888 122471 7917 123500 6586 c
124548 5237 126305 4580 128755 4580 c
130938 4580 133228 5184 135625 6373 c
138021 7562 140205 9302 142175 11592 C
151388 51072 L
160442 51693 L
161063 50912 L
153732 19243 l
153483 18196 153235 16935 152968 15426 c
152702 13917 152578 12959 152578 12586 c
152578 10687 152879 9178 153483 8059 c
154104 6959 154868 6142 155809 5610 c
156714 5095 157637 4775 158613 4651 c
159590 4527 160513 4473 161418 4473 c
163779 4473 166193 5219 168679 6710 c
171164 8201 173312 10136 175158 12533 c
177199 15196 178815 18160 179987 21409 c
181176 24640 181762 28137 181762 31882 c
181762 33959 181478 35557 180892 36693 c
180324 37811 179703 38806 178992 39622 c
178300 40492 177679 41415 177111 42356 c
176525 43314 176241 44664 176241 46386 c
176241 48374 176898 49883 178229 50912 c
179543 51960 180927 52474 182383 52474 c
184424 52474 186022 51658 187194 50007 c
188348 48356 188933 45977 188933 42853 c
@c
F
%CHAR: 209260 0 (w) @t
293563 42853 m
293563 37403 292782 32024 291220 26681 c
289658 21338 287528 16651 284830 12586 c
281812 8077 278403 4598 274587 2130 c
270770 -337 266616 -1562 262160 -1562 c
258894 -1562 255876 -657 253125 1136 c
250373 2947 248527 5432 247586 8574 C
246344 7367 245190 6249 244125 5201 c
243077 4154 241693 3089 239988 1970 c
238302 870 236740 18 235337 -568 c
233935 -1154 232142 -1456 229959 -1456 c
227331 -1456 225148 -1047 223426 -231 c
221722 586 220337 1651 219290 2965 c
218331 4207 217639 5627 217213 7207 c
216805 8787 216592 10438 216592 12178 c
216592 12835 216663 13669 216822 14663 c
216982 15675 217142 16545 217319 17273 c
221740 33693 l
222166 35255 222467 36675 222645 37971 c
222840 39249 222947 40314 222947 41131 c
222947 43084 222609 44380 221970 45019 c
221331 45658 220018 45977 218047 45977 c
217284 45977 216307 45835 215136 45551 c
213964 45285 213041 45054 212384 44877 C
213165 48214 L
215864 49421 218242 50344 220319 50966 c
222379 51587 224030 51906 225272 51906 c
228059 51906 230083 51250 231397 49954 c
232692 48658 233331 46812 233331 44415 c
233331 43794 233278 42942 233136 41859 c
232994 40794 232781 39711 232515 38646 c
227669 19456 l
227367 18160 227101 16846 226888 15497 c
226675 14148 226586 13136 226586 12480 c
226586 9888 227101 7917 228130 6586 c
229178 5237 230935 4580 233385 4580 c
235568 4580 237858 5184 240255 6373 c
242651 7562 244835 9302 246805 11592 C
256018 51072 L
265072 51693 L
265693 50912 L
258362 19243 l
258113 18196 257865 16935 257598 15426 c
257332 13917 257208 12959 257208 12586 c
257208 10687 257509 9178 258113 8059 c
258734 6959 259498 6142 260439 5610 c
261344 5095 262267 4775 263243 4651 c
264220 4527 265143 4473 266048 4473 c
268409 4473 270823 5219 273309 6710 c
275794 8201 277942 10136 279788 12533 c
281829 15196 283445 18160 284617 21409 c
285806 24640 286392 28137 286392 31882 c
286392 33959 286108 35557 285522 36693 c
284954 37811 284333 38806 283622 39622 c
282930 40492 282309 41415 281741 42356 c
281155 43314 280871 44664 280871 46386 c
280871 48374 281528 49883 282859 50912 c
284173 51960 285557 52474 287013 52474 c
289054 52474 290652 51658 291824 50007 c
292978 48356 293563 45977 293563 42853 c
@c
F
%CHAR: 313890 0 (.) @t
334695 5982 m
334695 4047 333985 2379 332583 1012 c
331180 -355 329512 -1047 327577 -1047 c
325624 -1047 323955 -355 322553 1012 c
321151 2379 320440 4047 320440 5982 c
320440 7917 321151 9604 322553 11006 c
323955 12409 325624 13101 327577 13101 c
329512 13101 331180 12409 332583 11006 c
333985 9604 334695 7917 334695 5982 c
@c
F
%CHAR: 359637 0 (c) @t
382785 -1456 m
376714 -1456 371921 320 368406 3852 c
364874 7385 363116 12409 363116 18923 c
363116 23273 363791 27409 365122 31385 c
366454 35362 368318 38877 370714 41965 c
373111 45054 376128 47575 379785 49545 c
383442 51498 387507 52474 391981 52474 c
396951 52474 400715 51427 403289 49332 c
405881 47238 407176 44593 407176 41397 c
407176 39001 406608 36906 405490 35113 c
404354 33302 402667 32397 400413 32397 c
398531 32397 397129 32876 396206 33799 c
395265 34740 394786 35788 394786 36924 c
394786 38042 395176 39551 395940 41468 c
396703 43403 397306 44948 397750 46137 C
397377 47060 396525 47752 395212 48178 c
393898 48622 392531 48835 391093 48835 c
386389 48835 382324 46084 378898 40598 c
375489 35095 373785 28367 373785 20379 c
373785 15462 374886 11556 377087 8663 c
379288 5769 382253 4314 385998 4314 c
389371 4314 392354 5219 394981 7030 c
397590 8823 400093 11379 402490 14663 C
405454 12480 L
403058 8698 399809 5432 395709 2681 c
391590 -71 387294 -1456 382785 -1456 c
@c
F
%CHAR: 424999 0 (o) @t
478716 32042 m
478716 27941 478024 23858 476639 19758 c
475254 15675 473248 12089 470603 9000 c
467941 5805 464728 3249 460964 1331 c
457201 -604 452834 -1562 447881 -1562 c
442130 -1562 437461 302 433875 4012 c
430271 7722 428478 12710 428478 18977 c
428478 23592 429242 27888 430768 31882 c
432295 35876 434336 39374 436910 42391 c
439502 45409 442733 47841 446550 49687 c
450384 51551 454538 52474 459012 52474 c
465189 52474 470018 50593 473497 46829 c
476976 43066 478716 38131 478716 32042 c
@c
468118 34013 m
468118 38930 467231 42622 465491 45090 c
463734 47557 461213 48782 457929 48782 c
455035 48782 452337 47894 449781 46137 c
447224 44362 445041 41486 443195 37492 c
441774 34474 440745 31119 440088 27427 c
439431 23734 439094 20344 439094 17219 c
439094 12249 439946 8503 441668 5947 c
443390 3408 445982 2130 449443 2130 c
452532 2130 455266 3107 457662 5042 c
460059 6994 461994 9444 463485 12426 c
464976 15338 466112 18675 466911 22438 c
467710 26202 468118 30054 468118 34013 c
@c
F
%CHAR: 499255 0 (o) @t
552972 32042 m
552972 27941 552280 23858 550895 19758 c
549510 15675 547504 12089 544859 9000 c
542197 5805 538984 3249 535220 1331 c
531457 -604 527090 -1562 522137 -1562 c
516386 -1562 511717 302 508131 4012 c
504527 7722 502734 12710 502734 18977 c
502734 23592 503498 27888 505024 31882 c
506551 35876 508592 39374 511166 42391 c
513758 45409 516989 47841 520806 49687 c
524640 51551 528794 52474 533268 52474 c
539445 52474 544274 50593 547753 46829 c
551232 43066 552972 38131 552972 32042 c
@c
542374 34013 m
542374 38930 541487 42622 539747 45090 c
537990 47557 535469 48782 532185 48782 c
529291 48782 526593 47894 524037 46137 c
521480 44362 519297 41486 517451 37492 c
516030 34474 515001 31119 514344 27427 c
513687 23734 513350 20344 513350 17219 c
513350 12249 514202 8503 515924 5947 c
517646 3408 520238 2130 523699 2130 c
526788 2130 529522 3107 531918 5042 c
534315 6994 536250 9444 537741 12426 c
539232 15338 540368 18675 541167 22438 c
541966 26202 542374 30054 542374 34013 c
@c
F
%CHAR: 573511 0 (k) @t
629216 46545 m
629216 45019 628613 43616 627423 42303 c
626216 41007 624743 40350 622968 40350 c
621831 40350 620695 40510 619595 40829 c
618476 41131 617269 41610 615956 42232 C
614038 41149 612068 39835 610044 38255 c
608021 36675 605802 34758 603423 32504 C
605393 27373 607062 23166 608429 19900 c
609796 16616 610967 13935 611944 11858 c
613186 9249 614571 7403 616080 6320 c
617589 5219 619240 4686 621050 4686 c
621885 4686 623021 4811 624477 5077 c
625932 5326 627068 5592 627867 5876 C
627086 2450 L
623855 1118 621317 249 619488 -213 c
617642 -657 615796 -888 613914 -888 c
611695 -888 609796 -266 608234 959 c
606654 2201 605127 4420 603671 7651 c
602251 10722 600991 13775 599872 16775 c
598772 19776 597671 22598 596606 25279 C
590517 20077 L
586044 0 L
576369 0 L
591813 66942 l
592062 68007 592221 68753 592310 69161 c
592399 69587 592434 70102 592434 70723 c
592434 71984 592239 72942 591813 73617 c
591405 74291 590819 74806 590056 75144 c
589328 75463 588405 75676 587286 75783 c
586186 75871 585050 75996 583914 76138 C
584641 79315 L
603938 80505 L
604452 79723 L
591760 25580 L
591973 25580 L
595896 29823 599446 33480 602660 36587 c
605873 39693 609228 42853 612725 46084 c
615228 48374 617198 49936 618654 50788 c
620110 51640 621672 52066 623340 52066 c
625098 52066 626518 51569 627601 50575 c
628666 49581 629216 48249 629216 46545 c
@c
F
%CHAR: 646773 0 (m) @t
737414 5876 m
736651 2556 L
733455 1260 730899 373 728999 -124 c
727082 -639 725467 -888 724100 -888 c
721331 -888 719254 -160 717869 1278 c
716484 2716 715792 4491 715792 6604 c
715792 7367 715863 8201 715987 9124 c
716129 10048 716360 11130 716680 12373 c
721774 31776 l
722147 33267 722449 34616 722680 35841 c
722911 37048 723017 38024 723017 38752 c
723017 41060 722520 42906 721508 44255 c
720496 45604 718899 46279 716715 46279 c
714407 46279 712118 45746 709881 44646 c
707644 43563 705123 41522 702318 38539 C
693265 0 L
683590 0 L
691756 34740 l
691934 35504 692093 36303 692253 37155 c
692413 38007 692484 38646 692484 39054 c
692484 41309 691916 43084 690798 44362 c
689679 45640 688011 46279 685827 46279 c
683857 46279 681673 45800 679277 44806 c
676880 43812 674111 41610 670951 38166 C
662164 0 L
652489 0 L
660247 33693 l
660513 34918 660797 36214 661045 37598 c
661312 38983 661436 40172 661436 41131 c
661436 43155 661116 44468 660460 45125 c
659785 45764 658507 46084 656608 46084 c
655844 46084 654868 45942 653661 45658 c
652471 45391 651548 45161 650874 44983 C
651655 48320 L
654371 49528 656767 50433 658844 51019 c
660921 51605 662696 51906 664188 51906 c
666975 51906 668945 51143 670099 49634 c
671253 48125 671874 46084 671945 43474 C
672265 43474 L
676348 46705 679703 49013 682348 50397 c
684975 51782 688117 52474 691756 52474 c
694845 52474 697348 51587 699283 49794 c
701200 48019 702283 45764 702532 43066 C
702727 43066 L
706437 46155 709739 48480 712632 50078 c
715544 51676 718899 52474 722751 52474 c
726088 52474 728644 51516 730420 49581 c
732213 47664 733100 45143 733100 42019 c
733100 41397 733011 40297 732816 38699 c
732621 37101 732319 35521 731911 33959 c
727544 17273 l
727224 16154 726940 14876 726656 13438 c
726372 12000 726248 10882 726248 10083 c
726248 8113 726656 6763 727491 6053 c
728325 5343 729727 4988 731698 4988 c
732355 4988 733313 5077 734556 5255 c
735816 5432 736757 5627 737414 5876 C
@c
F
%CHAR: 757474 0 (o) @t
811191 32042 m
811191 27941 810499 23858 809114 19758 c
807729 15675 805723 12089 803078 9000 c
800416 5805 797203 3249 793439 1331 c
789676 -604 785309 -1562 780356 -1562 c
774605 -1562 769936 302 766350 4012 c
762746 7722 760953 12710 760953 18977 c
760953 23592 761717 27888 763243 31882 c
764770 35876 766811 39374 769385 42391 c
771977 45409 775208 47841 779025 49687 c
782859 51551 787013 52474 791487 52474 c
797664 52474 802493 50593 805972 46829 c
809451 43066 811191 38131 811191 32042 c
@c
800593 34013 m
800593 38930 799706 42622 797966 45090 c
796209 47557 793688 48782 790404 48782 c
787510 48782 784812 47894 782256 46137 c
779699 44362 777516 41486 775670 37492 c
774249 34474 773220 31119 772563 27427 c
771906 23734 771569 20344 771569 17219 c
771569 12249 772421 8503 774143 5947 c
775865 3408 778457 2130 781918 2130 c
785007 2130 787741 3107 790137 5042 c
792534 6994 794469 9444 795960 12426 c
797451 15338 798587 18675 799386 22438 c
800185 26202 800593 30054 800593 34013 c
@c
F
%CHAR: 831730 0 (m) @t
922371 5876 m
921608 2556 L
918412 1260 915856 373 913956 -124 c
912039 -639 910424 -888 909057 -888 c
906288 -888 904211 -160 902826 1278 c
901441 2716 900749 4491 900749 6604 c
900749 7367 900820 8201 900944 9124 c
901086 10048 901317 11130 901637 12373 c
906731 31776 l
907104 33267 907406 34616 907637 35841 c
907868 37048 907974 38024 907974 38752 c
907974 41060 907477 42906 906465 44255 c
905453 45604 903856 46279 901672 46279 c
899364 46279 897075 45746 894838 44646 c
892601 43563 890080 41522 887275 38539 C
878222 0 L
868547 0 L
876713 34740 l
876891 35504 877050 36303 877210 37155 c
877370 38007 877441 38646 877441 39054 c
877441 41309 876873 43084 875755 44362 c
874636 45640 872968 46279 870784 46279 c
868814 46279 866630 45800 864234 44806 c
861837 43812 859068 41610 855908 38166 C
847121 0 L
837446 0 L
845204 33693 l
845470 34918 845754 36214 846002 37598 c
846269 38983 846393 40172 846393 41131 c
846393 43155 846073 44468 845417 45125 c
844742 45764 843464 46084 841565 46084 c
840801 46084 839825 45942 838618 45658 c
837428 45391 836505 45161 835831 44983 C
836612 48320 L
839328 49528 841724 50433 843801 51019 c
845878 51605 847653 51906 849145 51906 c
851932 51906 853902 51143 855056 49634 c
856210 48125 856831 46084 856902 43474 C
857222 43474 L
861305 46705 864660 49013 867305 50397 c
869932 51782 873074 52474 876713 52474 c
879802 52474 882305 51587 884240 49794 c
886157 48019 887240 45764 887489 43066 C
887684 43066 L
891394 46155 894696 48480 897589 50078 c
900501 51676 903856 52474 907708 52474 c
911045 52474 913601 51516 915377 49581 c
917170 47664 918057 45143 918057 42019 c
918057 41397 917968 40297 917773 38699 c
917578 37101 917276 35521 916868 33959 c
912501 17273 l
912181 16154 911897 14876 911613 13438 c
911329 12000 911205 10882 911205 10083 c
911205 8113 911613 6763 912448 6053 c
913282 5343 914684 4988 916655 4988 c
917312 4988 918270 5077 919513 5255 c
920773 5432 921714 5627 922371 5876 C
@c
F
%CHAR: 942431 0 (.) @t
963236 5982 m
963236 4047 962526 2379 961124 1012 c
959721 -355 958053 -1047 956118 -1047 c
954165 -1047 952496 -355 951094 1012 c
949692 2379 948981 4047 948981 5982 c
948981 7917 949692 9604 951094 11006 c
952496 12409 954165 13101 956118 13101 c
958053 13101 959721 12409 961124 11006 c
962526 9604 963236 7917 963236 5982 c
@c
F
%CHAR: 988178 0 (c) @t
1011326 -1456 m
1005255 -1456 1000462 320 996947 3852 c
993415 7385 991657 12409 991657 18923 c
991657 23273 992332 27409 993663 31385 c
994995 35362 996859 38877 999255 41965 c
1001652 45054 1004669 47575 1008326 49545 c
1011983 51498 1016048 52474 1020522 52474 c
1025492 52474 1029256 51427 1031830 49332 c
1034422 47238 1035717 44593 1035717 41397 c
1035717 39001 1035149 36906 1034031 35113 c
1032895 33302 1031208 32397 1028954 32397 c
1027072 32397 1025670 32876 1024747 33799 c
1023806 34740 1023327 35788 1023327 36924 c
1023327 38042 1023717 39551 1024481 41468 c
1025244 43403 1025847 44948 1026291 46137 C
1025918 47060 1025066 47752 1023753 48178 c
1022439 48622 1021072 48835 1019634 48835 c
1014930 48835 1010865 46084 1007439 40598 c
1004030 35095 1002326 28367 1002326 20379 c
1002326 15462 1003427 11556 1005628 8663 c
1007829 5769 1010794 4314 1014539 4314 c
1017912 4314 1020895 5219 1023522 7030 c
1026131 8823 1028634 11379 1031031 14663 C
1033995 12480 L
1031599 8698 1028350 5432 1024250 2681 c
1020131 -71 1015835 -1456 1011326 -1456 c
@c
F
%CHAR: 1053540 0 (o) @t
1107257 32042 m
1107257 27941 1106565 23858 1105180 19758 c
1103795 15675 1101789 12089 1099144 9000 c
1096482 5805 1093269 3249 1089505 1331 c
1085742 -604 1081375 -1562 1076422 -1562 c
1070671 -1562 1066002 302 1062416 4012 c
1058812 7722 1057019 12710 1057019 18977 c
1057019 23592 1057783 27888 1059309 31882 c
1060836 35876 1062877 39374 1065451 42391 c
1068043 45409 1071274 47841 1075091 49687 c
1078925 51551 1083079 52474 1087553 52474 c
1093730 52474 1098559 50593 1102038 46829 c
1105517 43066 1107257 38131 1107257 32042 c
@c
1096659 34013 m
1096659 38930 1095772 42622 1094032 45090 c
1092275 47557 1089754 48782 1086470 48782 c
1083576 48782 1080878 47894 1078322 46137 c
1075765 44362 1073582 41486 1071736 37492 c
1070315 34474 1069286 31119 1068629 27427 c
1067972 23734 1067635 20344 1067635 17219 c
1067635 12249 1068487 8503 1070209 5947 c
1071931 3408 1074523 2130 1077984 2130 c
1081073 2130 1083807 3107 1086203 5042 c
1088600 6994 1090535 9444 1092026 12426 c
1093517 15338 1094653 18675 1095452 22438 c
1096251 26202 1096659 30054 1096659 34013 c
@c
F
%CHAR: 1127796 0 (m) @t
1218437 5876 m
1217674 2556 L
1214478 1260 1211922 373 1210022 -124 c
1208105 -639 1206490 -888 1205123 -888 c
1202354 -888 1200277 -160 1198892 1278 c
1197507 2716 1196815 4491 1196815 6604 c
1196815 7367 1196886 8201 1197010 9124 c
1197152 10048 1197383 11130 1197703 12373 c
1202797 31776 l
1203170 33267 1203472 34616 1203703 35841 c
1203934 37048 1204040 38024 1204040 38752 c
1204040 41060 1203543 42906 1202531 44255 c
1201519 45604 1199922 46279 1197738 46279 c
1195430 46279 1193141 45746 1190904 44646 c
1188667 43563 1186146 41522 1183341 38539 C
1174288 0 L
1164613 0 L
1172779 34740 l
1172957 35504 1173116 36303 1173276 37155 c
1173436 38007 1173507 38646 1173507 39054 c
1173507 41309 1172939 43084 1171821 44362 c
1170702 45640 1169034 46279 1166850 46279 c
1164880 46279 1162696 45800 1160300 44806 c
1157903 43812 1155134 41610 1151974 38166 C
1143187 0 L
1133512 0 L
1141270 33693 l
1141536 34918 1141820 36214 1142068 37598 c
1142335 38983 1142459 40172 1142459 41131 c
1142459 43155 1142139 44468 1141483 45125 c
1140808 45764 1139530 46084 1137631 46084 c
1136867 46084 1135891 45942 1134684 45658 c
1133494 45391 1132571 45161 1131897 44983 C
1132678 48320 L
1135394 49528 1137790 50433 1139867 51019 c
1141944 51605 1143719 51906 1145211 51906 c
1147998 51906 1149968 51143 1151122 49634 c
1152276 48125 1152897 46084 1152968 43474 C
1153288 43474 L
1157371 46705 1160726 49013 1163371 50397 c
1165998 51782 1169140 52474 1172779 52474 c
1175868 52474 1178371 51587 1180306 49794 c
1182223 48019 1183306 45764 1183555 43066 C
1183750 43066 L
1187460 46155 1190762 48480 1193655 50078 c
1196567 51676 1199922 52474 1203774 52474 c
1207111 52474 1209667 51516 1211443 49581 c
1213236 47664 1214123 45143 1214123 42019 c
1214123 41397 1214034 40297 1213839 38699 c
1213644 37101 1213342 35521 1212934 33959 c
1208567 17273 l
1208247 16154 1207963 14876 1207679 13438 c
1207395 12000 1207271 10882 1207271 10083 c
1207271 8113 1207679 6763 1208514 6053 c
1209348 5343 1210750 4988 1212721 4988 c
1213378 4988 1214336 5077 1215579 5255 c
1216839 5432 1217780 5627 1218437 5876 C
@c
F
T
@rax %Note: Object
60.19710 530.18787 508.36422 531.06321 @E
 0 O 0 @g
0.00 0.00 0.00 0.20 k
/$fm 0 def
284.28066 530.18787 m
407.70170 530.18787 508.36422 530.38460 508.36422 530.62554 c
508.36422 530.86649 407.70170 531.06321 284.28066 531.06321 c
160.85962 531.06321 60.19710 530.86649 60.19710 530.62554 c
60.19710 530.38460 160.85962 530.18787 284.28066 530.18787 c
@c
F

@rax %Note: Object
172.94825 659.48287 184.03342 670.56775 @E
 0 O 0 @g
0.00 0.60 0.60 0.40 k
/$fm 0 def
178.31792 670.56605 m
181.36970 670.66129 183.93647 668.24986 184.03172 665.19836 c
184.12696 662.14658 181.71553 659.57981 178.66375 659.48457 c
175.61225 659.38932 173.04548 661.80047 172.94995 664.85225 c
172.85471 667.90403 175.26614 670.47080 178.31792 670.56605 c
@c
F

@rax %Note: Object
67.59326 630.36567 291.33439 656.95238 @E
 0 O 0 @g
0.00 0.60 1.00 0.00 k
/$fm 0 def
178.74822 656.78400 m
225.50173 658.24356 267.05055 650.38961 291.33439 637.35080 C
67.59326 630.36567 L
91.01650 644.89380 131.99471 655.32416 178.74822 656.78400 c
@c
F

@rax %Note: Object
74.67364 541.41789 294.19370 625.53061 @E
 0 O 0 @g
0.00 0.60 0.80 0.20 k
/$fm 0 def
294.19370 625.53061 m
294.19370 582.41367 l
294.19370 559.86576 275.74583 541.41789 253.19792 541.41789 c
115.66942 541.41789 l
93.12151 541.41789 74.67364 559.86576 74.67364 582.41367 c
74.67364 625.53061 L
294.19370 625.53061 L
@c
164.28756 576.92721 m
166.73499 576.92721 168.69742 577.76173 170.18589 579.41972 c
171.67465 581.08876 172.41902 583.28816 172.41902 586.05137 c
172.41902 588.82564 171.67465 591.04743 170.18589 592.73915 c
168.69742 594.41981 166.73499 595.26567 164.28756 595.26567 c
161.84013 595.26567 159.86636 594.41981 158.36655 592.71676 c
156.86646 591.02504 156.12208 588.80324 156.12208 586.05137 c
156.12208 583.28816 156.86646 581.08876 158.36655 579.41972 c
159.86636 577.76173 161.84013 576.92721 164.28756 576.92721 c
@c
236.13676 591.97606 m
239.38044 617.15509 L
256.29307 614.97638 L
253.65855 594.52866 L
267.23282 613.56699 L
286.76324 611.05096 L
269.23408 589.29279 L
282.61814 562.81294 L
261.74580 565.50189 L
252.69647 587.05682 L
250.11241 567.00085 L
234.87449 568.96384 L
233.76898 567.03175 232.39417 565.24961 230.74838 563.61883 c
228.32362 561.26183 225.52639 559.45729 222.36860 558.20551 c
219.21080 556.95345 215.83871 556.32189 212.27471 556.32189 c
208.66564 556.32189 205.28220 556.95345 202.13575 558.20551 c
198.97767 559.45729 196.18072 561.28450 193.73329 563.68658 c
191.34255 566.02120 189.51534 568.71666 188.28595 571.75058 c
187.95146 572.57887 187.66176 573.42784 187.41770 574.29638 C
186.23282 571.98359 184.68142 569.87490 182.76123 567.97228 c
180.33647 565.61528 177.53924 563.81074 174.38145 562.55896 c
171.22365 561.30690 167.85156 560.67534 164.28756 560.67534 c
160.67849 560.67534 157.29506 561.30690 154.14860 562.55896 c
151.41430 563.64265 148.95014 565.15861 146.74961 567.10460 C
146.23030 566.00929 145.64750 564.93043 145.00006 563.87027 c
142.60224 560.02507 139.54337 556.77969 135.83679 554.13723 c
132.13077 551.49449 127.94570 549.59046 123.30935 548.44611 c
118.61461 547.28731 114.01030 547.02283 109.51455 547.64079 c
105.00435 548.25562 100.77902 549.73446 96.82356 552.07446 c
92.96447 554.34331 89.72135 557.26384 87.14835 560.81594 c
84.57165 564.38277 82.69965 568.49726 81.54822 573.16337 c
80.39679 577.82891 80.13543 582.35641 80.74970 586.74189 c
81.36794 591.11263 82.87597 595.22088 85.23666 599.02554 c
87.63080 602.88548 90.67209 606.14192 94.38208 608.76992 c
98.07364 611.40898 102.29074 613.30535 107.01609 614.47153 c
111.73975 615.63742 116.35569 615.92031 120.85087 615.30236 c
125.35739 614.70142 129.57902 613.23732 133.52343 610.94268 c
137.36154 608.63613 140.59644 605.68299 143.19213 602.10482 c
143.30353 601.95175 143.41294 601.79726 143.52151 601.64249 C
144.19786 602.51329 144.94025 603.34328 145.74614 604.13017 c
148.17118 606.49852 150.95679 608.31439 154.11458 609.55483 c
157.26132 610.80690 160.65609 611.42712 164.28756 611.42712 c
167.91902 611.42712 171.31380 610.80690 174.46054 609.55483 c
177.61833 608.31439 180.41528 606.49852 182.86271 604.13017 c
185.23106 601.77317 187.04693 599.05502 188.28737 595.99871 c
188.61335 595.20019 188.89569 594.38438 189.13606 593.55213 C
190.30479 595.85216 191.84315 597.93109 193.73329 599.77672 c
196.15833 602.14507 198.94394 603.96094 202.10173 605.20139 c
205.24847 606.45345 208.64324 607.07367 212.27471 607.07367 c
215.90617 607.07367 219.30094 606.45345 222.44769 605.20139 c
225.60548 603.96094 228.40243 602.14507 230.84986 599.77672 c
233.13231 597.50532 234.90113 594.89773 236.13676 591.97606 C
@c
212.27471 572.57376 m
214.72214 572.57376 216.68457 573.40828 218.17304 575.06627 c
219.66180 576.73531 220.40617 578.93471 220.40617 581.69792 c
220.40617 584.47219 219.66180 586.69398 218.17304 588.38570 c
216.68457 590.06636 214.72214 590.91222 212.27471 590.91222 c
209.82728 590.91222 207.85351 590.06636 206.35370 588.36331 c
204.85361 586.67159 204.10923 584.44980 204.10923 581.69792 c
204.10923 578.93471 204.85361 576.73531 206.35370 575.06627 c
207.85351 573.40828 209.82728 572.57376 212.27471 572.57376 c
@c
118.09162 569.58888 m
121.27578 570.37465 123.56079 572.09046 124.96535 574.72498 c
125.29956 575.35795 125.56885 576.01502 125.77323 576.69987 C
139.09380 579.98721 L
138.66435 581.91420 138.44920 583.93587 138.44920 586.05137 c
138.44920 589.36819 138.97956 592.46220 140.03150 595.33540 C
122.08167 590.90598 L
121.64939 591.32551 121.18535 591.70819 120.68901 592.05288 c
118.21266 593.76132 115.38850 594.23159 112.20406 593.44583 c
109.02019 592.66035 106.72441 590.92611 105.31956 588.22894 c
103.91159 585.54652 103.65647 582.41650 104.54003 578.83720 c
105.42699 575.24230 107.10142 572.62054 109.58854 570.93052 c
112.07225 569.25524 114.90831 568.80340 118.09162 569.58888 c
@c
F

@rax %Note: Object
302.40794 555.79550 500.96778 609.00690 @E
 0 O 0 @g
0.00 0.60 0.80 0.20 k
/$fm 0 def
311.12050 555.79550 m
302.40794 595.50661 L
320.81471 599.54513 L
322.03701 593.97307 L
323.02715 596.66372 324.31238 598.75965 325.87994 600.25748 c
327.46082 601.75871 329.42438 602.76699 331.78422 603.28460 c
334.56359 603.89433 337.03370 603.72170 339.19172 602.77975 c
341.33924 601.82192 343.31301 600.02872 345.10224 597.38457 C
346.00309 600.48170 347.39150 602.98498 349.27030 604.88135 c
351.14627 606.79049 353.44233 608.03631 356.15622 608.63187 c
360.05017 609.48624 363.43928 608.88274 366.32353 606.82252 c
369.21061 604.74898 371.12372 601.54072 372.07871 597.18813 c
377.94359 570.45628 L
359.31373 566.36901 L
354.93307 586.33597 l
354.48718 588.36813 354.00444 589.69134 353.47918 590.33169 c
352.94088 590.96948 352.23392 591.18548 351.32939 590.98677 c
350.30665 590.76255 349.63824 590.17635 349.32699 589.21483 c
349.01291 588.26636 349.05146 586.90091 349.43981 585.13068 c
353.82047 565.16372 L
335.46614 561.13682 L
331.08548 581.10378 l
330.65121 583.08350 330.17131 584.39339 329.64009 585.06038 c
329.09613 585.72425 328.37329 585.95046 327.45543 585.74891 c
326.40661 585.51902 325.72517 584.92970 325.41392 583.96819 c
325.09984 583.02000 325.13839 581.65427 325.52674 579.88403 c
329.90740 559.91735 L
311.12050 555.79550 L
@c
432.32230 563.45613 m
432.67209 604.11005 L
451.51597 603.94791 L
451.46693 598.24375 L
453.03137 600.64639 454.75087 602.40331 456.61266 603.51449 c
458.48806 604.62595 460.62709 605.17162 463.04306 605.15065 c
465.88847 605.12627 468.25795 604.40769 470.15206 603.00879 c
472.03228 601.59685 473.55704 599.40907 474.71272 596.43298 C
476.28057 599.25146 478.19169 601.38283 480.44523 602.81291 c
482.69934 604.25660 485.21537 604.95987 487.99389 604.93578 c
491.97997 604.90148 495.14967 603.55871 497.50271 600.90775 c
499.85546 598.24318 501.00605 594.68967 500.96778 590.23361 c
500.73222 562.86709 L
481.65987 563.03121 L
481.83591 583.47213 l
481.85376 585.55276 481.67802 586.95024 481.30838 587.69150 c
480.92570 588.43332 480.28450 588.80098 479.35843 588.80891 c
478.31159 588.81798 477.52923 588.39534 477.01191 587.52737 c
476.49458 586.67272 476.22784 585.33279 476.21225 583.52060 c
476.03622 563.07969 L
457.24592 563.24154 L
457.42195 583.68246 l
457.43953 585.70923 457.26350 587.09310 456.89414 587.86157 c
456.51146 588.62976 455.85723 589.01131 454.91754 589.01953 c
453.84378 589.02860 453.04838 588.60624 452.53077 587.73798 c
452.01345 586.88362 451.74671 585.54369 451.73112 583.73150 c
451.55509 563.29058 L
432.32230 563.45613 L
@c
404.79647 572.68602 m
406.21918 572.68602 407.37345 573.19597 408.25956 574.21616 c
409.15871 575.23606 409.60176 576.57827 409.60176 578.22917 c
409.60176 579.90699 409.15871 581.24920 408.28620 582.25578 c
407.40038 583.26265 406.24611 583.77260 404.79647 583.77260 c
403.33351 583.77260 402.16592 583.26265 401.27981 582.25578 c
400.40759 581.24920 399.96454 579.90699 399.96454 578.22917 c
399.96454 576.55162 400.40759 575.20942 401.27981 574.20255 c
402.16592 573.19597 403.33351 572.68602 404.79647 572.68602 c
@c
428.55364 578.22917 m
428.55364 575.16917 427.89600 572.24296 426.59405 569.46472 c
425.27877 566.68620 423.39969 564.22998 420.97011 562.10939 c
418.83591 560.27055 416.40661 558.87449 413.66863 557.92176 c
410.93036 556.96876 407.97751 556.48545 404.79647 556.48545 c
401.62904 556.48545 398.67591 556.95515 395.95124 557.89483 c
393.22658 558.84784 390.78397 560.24362 388.59619 562.10939 c
386.19354 564.14948 384.32778 566.57877 382.99918 569.39754 c
381.67030 572.21603 381.01266 575.16917 381.01266 578.22917 c
381.01266 581.31638 381.67030 584.26923 382.99918 587.06107 c
384.32778 589.85291 386.19354 592.28220 388.59619 594.34923 c
390.78397 596.21499 393.22658 597.61077 395.95124 598.56378 c
398.67591 599.50318 401.62904 599.97317 404.79647 599.97317 c
407.97751 599.97317 410.93036 599.48986 413.66863 598.53685 c
416.40661 597.58384 418.86283 596.18806 421.03729 594.34923 c
423.42633 592.30913 425.27877 589.87956 426.59405 587.07439 c
427.89600 584.26923 428.55364 581.31638 428.55364 578.22917 c
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
